services:
  - type: web
    name: diabetes-prediction-app
    env: python
    buildCommand: |
      # Install Python dependencies
      pip install -r requirements.txt
      
      # Install Node.js dependencies and build frontend
      cd frontend
      npm install
      npm run build
      
      # Copy build to a location accessible by the Python app.
      # Prefer the react-scripts build output (build/). As a fallback,
      # copy frontend/public (some setups put prebuilt assets there).
      if [ -d "build" ]; then
        cp -r build ../build
      elif [ -d "public" ]; then
        # Sometimes the deployed frontend files are in `public` (unusual for CRA,
        # but safe to support). Copy them into ../build so the Python app can
        # serve them from the expected location.
        cp -r public ../build
      else
        echo "No frontend build or public directory found in frontend"
      fi
      cd ..
      
      # Verify build was copied
      if [ -d "build" ]; then
        echo "Frontend build successful and copied to root directory"
      else
        echo "Frontend build failed or build directory not found"
      fi

  startCommand: uvicorn app:app --host 0.0.0.0 --port $PORT
    envVars:
      - key: PYTHON_VERSION
        value: 3.9.15
      - key: NODE_VERSION
        value: 18.17.0